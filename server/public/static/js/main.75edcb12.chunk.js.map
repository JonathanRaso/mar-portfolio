{"version":3,"sources":["components/shared/navbar/index.js","components/home-card/index.js","components/shared/loading/index.js","components/home/index.js","components/infos/index.js","components/context/auth-context.js","components/shared/404/index.js","components/project/index.js","components/admin/admin-dashboard/index.js","App.js","index.js"],"names":["Navbar","src","alt","className","type","id","to","exact","htmlFor","HomeCard","title","description","imageUrl","process","width","height","threshold","placeholder","substring","LoadingSpinner","Home","useState","loadedProjects","setLoadedProjects","loading","setLoading","useEffect","a","axios","get","projectsRequest","data","projects","fetchProjects","map","project","Infos","href","target","rel","AuthContext","createContext","NoMatch","ProjectDetails","projectId","useParams","history","useHistory","login","useContext","specificProject","setSpecificProject","backgroundColor","setBackgroundColor","setTitle","setDescription","creationResult","setCreationResult","preLoading","setPreLoading","handleDeleteButton","delete","setTimeout","push","handleSubmitEditForm","event","preventDefault","editedDescription","editedTitle","length","patch","colorsArray","Math","floor","random","projectData","fetchSpecificProject","onSubmit","method","name","value","onChange","onClick","AdminDashboard","setLogin","username","setUsername","password","setPassword","imageFile","setImageFile","fileName","setFileName","handleSubmitLoginForm","post","handleSubmitCreateForm","formData","FormData","append","required","encType","files","match","hidden","App","isLogged","useMemo","Provider","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75edcb12.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\n\r\nimport '../../../App.css';\r\nimport './styles.css';\r\n\r\nconst Navbar = () => {\r\n\r\n  return (\r\n    <header>\r\n      <img src=\"/MAR-portfolio-logo.png\" alt=\"logo\" className=\"logo\"/>\r\n      <input type=\"checkbox\" id=\"nav-toggle\" className=\"nav-toggle\"/>\r\n      <nav>\r\n        <ul>\r\n          <li><NavLink to=\"/\" exact>Projets</NavLink></li>\r\n          <li><NavLink to=\"/infos\" exact>Infos</NavLink></li>\r\n        </ul>\r\n      </nav>\r\n      <label htmlFor=\"nav-toggle\" className=\"nav-toggle-label\">\r\n        <span></span>\r\n      </label>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default Navbar;","import { Link } from 'react-router-dom';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n\r\nimport './styles.css';\r\n\r\nconst HomeCard = ({id, title, description, imageUrl}) => {\r\n\r\n  return (\r\n    <div className=\"card__container\">\r\n      <Link to={`/${id}`}>\r\n        <div key={id} className=\"card__body\">\r\n            <LazyLoadImage \r\n              src={`${process.env.REACT_APP_ASSET_URL}/${imageUrl}`}\r\n              alt={title}\r\n              className=\"card__body--image\"\r\n              width=\"300px\"\r\n              height=\"400px\"\r\n              threshold=\"0\"\r\n              placeholder=\"\"\r\n            />\r\n          <div className=\"card__overlay\">\r\n            <h2 className=\"card__overlay--title\">{`${title.substring(0, 25)}`}</h2>\r\n            <p className=\"card__overlay--description\">{`${description.substring(0, 100)}`}</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeCard;","import './styles.css';\r\n\r\nconst LoadingSpinner = () => {\r\n\r\n  return (\r\n    <div className=\"loading__spinner\"></div>\r\n  )\r\n}\r\n\r\nexport default LoadingSpinner;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport HomeCard from '../home-card/index.js';\r\nimport LoadingSpinner from '../shared/loading/index.js';\r\n\r\nimport '../../App.css';\r\nimport './styles.css';\r\n\r\nconst Home = () => {\r\n\r\n  const [loadedProjects, setLoadedProjects] = useState(null);\r\n\r\n  const [loading, setLoading] = useState();\r\n\r\n  // useEffect for fetching all projects when page load for first time.\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const projectsRequest = await axios.get(process.env.REACT_APP_BACKEND_URL + '/projects');\r\n        setLoadedProjects(projectsRequest.data.projects);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []); \r\n\r\n  return (\r\n    <main>\r\n      <div className=\"homepage__container\">\r\n      {loading && \r\n        <LoadingSpinner />\r\n      }\r\n      {!loading && loadedProjects && \r\n        loadedProjects.map((project) => {\r\n          return ( \r\n            <HomeCard \r\n              key={project.id}\r\n              id={project.id}\r\n              title={project.title}\r\n              description={project.description}\r\n              imageUrl={project.imageUrl}\r\n            />\r\n          )\r\n        })\r\n      }\r\n      </div>\r\n    </main>\r\n  )\r\n};\r\n\r\nexport default Home;","import '../../App.css'\r\nimport './styles.css'\r\n\r\nconst Infos = () => {\r\n\r\n  return (\r\n    <main className=\"main__height\">\r\n      <div className=\"infos__container\">\r\n        <h2 className=\"infos__title\">Michel Raso</h2>\r\n        <img className=\"infos__avatar\" src=\"/MAR-portfolio-portrait.jpg\" alt=\"portrait de l'artiste\"/>\r\n        <div className=\"infos__description\">\r\n          <h3 className=\"infos__description--title\">Présentation</h3>\r\n          <div className=\"infos__description--text\">\r\n          <p>\r\n            Bonjour et bienvenue sur mon portfolio ! \r\n          </p>\r\n          <p>\r\n            J'ai débuté la peinture à l'huile il y a une trentaine d'années. N'arrivant pas à progresser comme je le souhaitais, j'ai décidé de suivre des cours afin de m'améliorer plus rapidement. J'ai également suivi un stage d'une semaine en Ardèche avec Alain Cheval, un peintre professionnel. Et pour compléter cette formation, j'ai suivi des cours à l'académie Gérard Dubois à Lyon une fois par semaine.\r\n          </p>\r\n          <p>\r\n            Je faisais du figuratif (natures mortes, paysages), mais je commençais à en faire le tour. C'est à ce moment que j'ai commencé à faire de l'abstraction. Je pensais être plus créatif en m'inspirant de la géométrie.\r\n          </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"infos__medium\">\r\n          <h3 className=\"infos__medium--title\">Techniques</h3>\r\n          <div className=\"infos__medium--text\">\r\n          <p>\r\n            Je travaillais à l'huile sur chassis. Mais j'ai changé de format il y a 5 ou 6 ans, pour passer sur médium et papier dessin de 300g (format A4 et A3). Désormais j'utilise différents outils comme les feutres, les stylos de couleur ou l'acrylique.\r\n          </p>\r\n          <p>\r\n            Pourquoi ces nouveaux formats me demanderez-vous ? Tous simplement pour une question de place (les chassis sont trop encombrants!). \r\n          </p>\r\n          </div> \r\n        </div>\r\n        <div className=\"infos__social\">\r\n          <h3 className=\"infos__social--title\">Me contacter</h3>\r\n          <p className=\"infos__social--text\">\r\n            Pour me contacter, vous pouvez m'envoyer un mail à cette adresse : <strong>pascaleras@outlook.fr</strong>\r\n          </p>\r\n          <p className=\"infos__social--icons\">\r\n            Vous pouvez également me retrouver sur les réseaux sociaux pour voir mon travail ou échanger.\r\n          </p>\r\n            <a \r\n              href=\"https://fr-fr.facebook.com/people/Michel-Raso/100015040781508\" \r\n              target=\"_blank\" \r\n              rel=\"noreferrer\"\r\n            >\r\n              <img src=\"/MAR-portfolio-facebook.png\" alt=\"facebook logo\"/>\r\n            </a>\r\n            <a \r\n              href=\"https://www.pinterest.fr/raso_m/\" \r\n              target=\"_blank\" \r\n              rel=\"noreferrer\"\r\n            >\r\n              <img src=\"/MAR-portfolio-pinterest.png\" alt=\"pinterest logo\"/>\r\n            </a>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n};\r\n\r\nexport default Infos;","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext(false);","import './styles.css';\r\n\r\nconst NoMatch = () => {\r\n  \r\n  return (\r\n    <div className=\"nopage__text\">\r\n      <h1>Désolé, cette page n'existe pas !</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoMatch;","import { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { AuthContext } from '../context/auth-context';\r\nimport NoMatch from '../shared/404';\r\nimport LoadingSpinner from '../shared/loading/index';\r\n\r\nimport '../../App.css';\r\nimport './styles.css';\r\n\r\nconst ProjectDetails = () => {\r\n  // Getting id of the project with useParams()\r\n  let { projectId } = useParams();\r\n  const history = useHistory();\r\n\r\n  const { login } = useContext(AuthContext);\r\n\r\n  // Setting specific project data\r\n  const [specificProject, setSpecificProject] = useState();\r\n\r\n  // Setting random background color\r\n  const [backgroundColor, setBackgroundColor] = useState();\r\n\r\n  // Setting title and description of the project (for editing)\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  // Display error/success message\r\n  const [creationResult, setCreationResult] = useState(\"\");\r\n\r\n  // Loading before specific project data\r\n  const [preLoading, setPreLoading] = useState();\r\n\r\n  // Loading for edit/delete http request\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleDeleteButton = async () => {\r\n    // Set loading == true during delete request\r\n    setLoading(true);\r\n\r\n    // Try deleting project. If successful, display success message and redirect\r\n    // If unsuccessful, display error message\r\n    try {\r\n      await axios.delete(`${process.env.REACT_APP_BACKEND_URL}/projects/${projectId}`);\r\n      setLoading(false);\r\n      setCreationResult(\"Suppression réussie!\");\r\n      setTimeout(() => {\r\n        setCreationResult(\"\");\r\n        history.push('/');\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setCreationResult(\"La suppression a échoué, veuillez recommencer.\");\r\n    }\r\n  }\r\n\r\n  const handleSubmitEditForm = async (event) => {\r\n    // 1 - Disable normal behaviour of form when submit\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    \r\n    // 2 - Get data from form\r\n    let editedTitle = title;\r\n    let editedDescription = description;\r\n\r\n    // 3 - Check if one of the input is missing. If so, add previous data in order to send something complete to the server.\r\n    // If not, express-validator will send 500 response because he needs a title and a description with at least 3 and 15 characters.\r\n    if (editedTitle.length === 0) {\r\n      editedTitle = specificProject.title;\r\n    };\r\n\r\n    if (editedDescription.length === 0) {\r\n      editedDescription = specificProject.description;\r\n    };\r\n\r\n    // 4 - Async patch request to update infos inside DB and redirect admin to homepage if request successful.\r\n    try {\r\n      await axios.patch(`${process.env.REACT_APP_BACKEND_URL}/projects/${projectId}`, { title : editedTitle, description: editedDescription });\r\n      setLoading(false);\r\n      setCreationResult(\"Modification réussie!\");\r\n\r\n      setTimeout(() => {\r\n        setCreationResult(\"\");\r\n        history.push('/');\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setCreationResult(\"La modification a échoué, veuillez recommencer.\");\r\n    }\r\n  }\r\n\r\n  // useEffect for random background color.\r\n  useEffect(() => {\r\n    const randomColors = ['first', 'second', 'third', 'fourth'];\r\n    const backgroundInfoColor = (colorsArray) => {\r\n      setBackgroundColor(colorsArray[Math.floor(Math.random() * colorsArray.length)]);\r\n    };\r\n    backgroundInfoColor(randomColors);\r\n  }, [backgroundColor]);\r\n\r\n  // useEffect for fetching specific project data, using projectId to know which one to fetch.\r\n  useEffect(() => {\r\n    const fetchSpecificProject = async () => {\r\n      setPreLoading(true);\r\n      try {\r\n        const projectData = await axios.get(`${process.env.REACT_APP_BACKEND_URL}/projects/${projectId}`);\r\n        setSpecificProject(projectData.data.project);\r\n        setPreLoading(false);\r\n      } catch (err) {\r\n        setPreLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchSpecificProject();\r\n  }, [projectId]);\r\n\r\n  return (\r\n    <>\r\n    <main>\r\n    <div className=\"project__container\">\r\n    {preLoading && \r\n      <LoadingSpinner />\r\n    }\r\n    {!preLoading && !specificProject && <NoMatch />}\r\n      {login && \r\n        <div className=\"admin__form\">\r\n        {loading && \r\n          <LoadingSpinner />\r\n        }   \r\n        {creationResult &&\r\n          <span className=\"dashboard__message\">{creationResult}</span>\r\n        }\r\n            <form className=\"admin__edit\" onSubmit={handleSubmitEditForm} method=\"POST\">\r\n\r\n              <label className=\"admin__label\" htmlFor=\"title\">Titre</label>\r\n              <input \r\n                className=\"admin__input\"\r\n                id=\"title\" \r\n                type=\"text\" \r\n                name=\"title\" \r\n                value={title}\r\n                placeholder=\"3 caractères min\"\r\n                onChange={(event) => {\r\n                  setTitle(event.target.value);\r\n                }}\r\n              />\r\n\r\n              <label className=\"admin__label\" htmlFor=\"description\">Description</label>\r\n              <textarea \r\n                className=\"admin__textarea\"\r\n                id=\"description\" \r\n                type=\"text\" \r\n                name=\"description\" \r\n                value={description}\r\n                placeholder=\"15 caractères min\" \r\n                onChange={(event) => {\r\n                  setDescription(event.target.value);\r\n                }} \r\n              />\r\n\r\n              <input className=\"admin__button\" type=\"submit\" value=\"Modifier ce projet\"/>\r\n            </form>\r\n            <input className=\"admin__button\" type=\"button\" onClick={handleDeleteButton} value=\"Supprimer ce projet\" />\r\n          </div>\r\n      }\r\n\r\n      {!preLoading && specificProject &&\r\n      <>\r\n        <div className={`project__picture project__picture--${backgroundColor}`}>\r\n          {specificProject &&\r\n          <>\r\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${specificProject.imageUrl}`} alt={specificProject.title}/>\r\n          </>\r\n          }\r\n        </div>\r\n        <div className={`project__info project__info--${backgroundColor}`}>\r\n          {specificProject &&\r\n          <>\r\n            <h2 className=\"project__info--title\">{specificProject.title}</h2>\r\n            <p className=\"project__info--description\">{specificProject.description}</p>\r\n          </> \r\n          }\r\n        </div>\r\n      </>\r\n      }\r\n      </div>\r\n    </main>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default ProjectDetails;","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\n\r\nimport LoadingSpinner from '../../shared/loading/index';\r\n\r\nimport '../../../App.css';\r\nimport './styles.css';\r\n\r\nconst AdminDashboard = () => {\r\n\r\n  // Getting login value (true or false) from context hook\r\n  const { login, setLogin } = useContext(AuthContext);\r\n\r\n  // Used for redirecting admin.\r\n  const history = useHistory();\r\n\r\n  // Display Loading Spinner if loading == true;\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Login form state\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Create form state\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [imageFile, setImageFile] = useState();\r\n\r\n  // Display file name before form submit\r\n  const [fileName, setFileName] = useState(\"\");\r\n\r\n  // Display error/success message\r\n  const [creationResult, setCreationResult] = useState(\"\");\r\n\r\n  const handleSubmitLoginForm = async (event) => {\r\n    // Prevent submit default behaviour and set loading to true\r\n    event.preventDefault();\r\n    setLoading(true); \r\n    \r\n    // Send username/password to backend and change login/loading state if request successful or not\r\n    try {\r\n      await axios.post(process.env.REACT_APP_BACKEND_URL + '/users/login', { username, password });\r\n      setLogin(true);\r\n      setLoading(false);\r\n      setCreationResult(\"\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setCreationResult(\"La connexion a échoué, veuillez recommencer.\");\r\n    }  \r\n  }\r\n\r\n  const handleFileChange = (event) => {\r\n    // set imageFile value and get file name to display on creation form\r\n    setImageFile(event.target.files[0]);\r\n    setFileName(event.target.value.match(/[\\/\\\\]([\\w\\d\\s\\.\\-\\(\\)]+)$/)[1]);\r\n  }\r\n\r\n  const handleSubmitCreateForm = async (event) => {\r\n\r\n    // Prevent submit default behaviour and set loading to true\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Add data sent by client to formData.\r\n      // Send post request with data.\r\n      // If successful, display message and redirect to homepage\r\n      const formData = new FormData();\r\n      formData.append('title', title);\r\n      formData.append('description', description);\r\n      formData.append('imageUrl', imageFile);\r\n      await axios.post(process.env.REACT_APP_BACKEND_URL + '/projects/add-project', formData );\r\n      setLoading(false);\r\n      setCreationResult(\"Création du projet réussie! Redirection en cours.\");\r\n\r\n      setTimeout(() => {\r\n        setCreationResult(\"\");\r\n        history.push('/');\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      // If unsuccessful, display error message.\r\n      setLoading(false);\r\n      setCreationResult(\"La création du projet a échoué, veuillez recommencer.\");\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <main> \r\n      <div className=\"admin__container\">\r\n        {creationResult &&\r\n          <span className=\"dashboard__message\">{creationResult}</span>\r\n        }\r\n        {!login &&\r\n          <div className=\"dashboard__form\">\r\n            {!loading && \r\n              <form className=\"dashboard__login\" onSubmit={handleSubmitLoginForm} method=\"POST\">\r\n\r\n              <label className=\"dashboard__label\" htmlFor=\"username\">Nom d'utilisateur</label>\r\n              <input \r\n                className=\"dashboard__input\"\r\n                id=\"username\" \r\n                type=\"text\" \r\n                name=\"username\" \r\n                value={username} \r\n                onChange={(event) => {\r\n                  setUsername(event.target.value);\r\n                }} \r\n                required/>\r\n\r\n              <label className=\"dashboard__label\" htmlFor=\"password\">Mot de passe</label>\r\n              <input \r\n                className=\"dashboard__input\"\r\n                id=\"password\" \r\n                type=\"password\" \r\n                name=\"password\" \r\n                value={password} \r\n                onChange={(event) => {\r\n                  setPassword(event.target.value);\r\n                }} \r\n                required/>\r\n\r\n              <input className=\"dashboard__button\" type=\"submit\" value=\"Connexion\"/>\r\n            </form>\r\n            }  \r\n            {loading && \r\n              <LoadingSpinner />  \r\n            }\r\n          </div>\r\n        }\r\n        \r\n        {login && \r\n          <div className=\"dashboard__form\">  \r\n            {!loading && \r\n              <form className=\"dashboard__creation\" onSubmit={handleSubmitCreateForm} method=\"POST\" encType=\"multipart/form-data\">\r\n\r\n              <label className=\"dashboard__label\" htmlFor=\"title\">Titre du projet</label>\r\n              <input \r\n                className=\"dashboard__input\"\r\n                id=\"title\" \r\n                type=\"text\" \r\n                name=\"title\"\r\n                placeholder=\"3 caractères min\" \r\n                value={title} \r\n                onChange={(event) => {\r\n                  setTitle(event.target.value);\r\n                }}\r\n                required\r\n              />\r\n\r\n              <label className=\"dashboard__label\" htmlFor=\"description\">Description du projet</label>\r\n              <textarea\r\n                className=\"dashboard__textarea\" \r\n                id=\"description\" \r\n                name=\"description\"\r\n                placeholder=\"15 caractères min\" \r\n                value={description} \r\n                onChange={(event) => {\r\n                  setDescription(event.target.value);\r\n                }} \r\n                required\r\n              />\r\n\r\n              <label className=\"dashboard__label--file\" htmlFor=\"imageUrl\">Choisir une image</label>\r\n              <input\r\n                className=\"dashboard__input\" \r\n                id=\"imageUrl\" \r\n                type=\"file\" \r\n                name=\"imageUrl\" \r\n                onChange={handleFileChange} \r\n                required\r\n                hidden\r\n              />\r\n              <span className=\"dashboard__filename\">{fileName ? fileName : \"Aucun fichier choisi!\" }</span>\r\n\r\n              <input className=\"dashboard__button\" type=\"submit\" value=\"Valider\"/>\r\n            </form>\r\n            }      \r\n            {loading && \r\n              <LoadingSpinner />  \r\n            }\r\n          </div>  \r\n        }\r\n      </div>\r\n    </main>\r\n  )\r\n};\r\n\r\nexport default AdminDashboard;","import React, { useState, useMemo } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/shared/navbar/index.js';\nimport Home from './components/home/index.js';\nimport Infos from './components/infos/index.js';\nimport ProjectDetails from './components/project/index.js';\nimport NoMatch from './components/shared/404';\n\nimport AdminDashboard from './components/admin/admin-dashboard/index.js';\n\nimport { AuthContext } from './components/context/auth-context';\n\n\nimport './App.css';\n\nfunction App() {\n  const [login, setLogin] = useState(false);\n\n  const isLogged = useMemo(() => ({ login, setLogin }), [login, setLogin]);\n\n  return (\n    <AuthContext.Provider value={isLogged}>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/infos\">\n            <Infos />\n          </Route>\n          <Route exact path=\"/admin\">\n            <AdminDashboard />\n          </Route>\n          <Route exact path=\"/:projectId\">\n            <ProjectDetails />\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </AuthContext.Provider>  \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}